name: Build Spack Containers
on:
  pull_request: []
  workflow_dispatch: 
    inputs:
      package:
        description: 'Name of spack package to build containers for'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest    
    permissions:
      packages: read
    outputs:
      containers: ${{ steps.generate.outputs.containers }}
    name: Build Matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate matrix
        id: generate
        run: |
            pip install requests
            python scripts/generate-matrix.py
            
  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        # Each entry is a container, and then compiler within it, and a tag for the version
        container: ${{ fromJson(needs.prepare.outputs.containers) }}
        #arch: ['linux/amd64'] # ,'linux/ppc64le','linux/arm64']
        arch: ['linux/amd64,linux/ppc64le,linux/arm64']
        package: ["zlib"] #["${{ github.event.inputs.package }}"]

    name: Build ${{ matrix.package }} ${{ matrix.container[0] }} ${{ matrix.container[1] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Container Tag
        run: |          
          container="pkg-${{ matrix.package }}-${{ matrix.container[2] }}:latest"
          tag=$(date '+%Y-%m-%d')
          echo "container=${container}" >> $GITHUB_ENV
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Deploy ${{ matrix.dockerfile[1] }}
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          platforms: ${{ matrix.arch }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
             ghcr.io/buildsi/${{ env.container }}:latest
             ghcr.io/buildsi/${{ env.container }}:${{ env.tag }}
          build-args: |
             base=${{ matrix.container[0] }}
             package=${{ matrix.package }}
             compiler=${{ matrix.container[1] }}
